syntax = "proto3";

package opentelemetry.collector.exporter.exporterhelper.internal.queue;

option go_package = "go.opentelemetry.io/collector/exporter/exporterhelper/internal/queue";

// QueueMetadata holds all persistent metadata for the queue.
message QueueMetadata{
  // Current total size of the queue (in bytes, items, or requests).
  sfixed64 queue_size = 1;

  // Index of the next item to be read from the queue.
  fixed64 read_index = 2;

  // Index where the next item will be written to the queue.
  fixed64 write_index = 3;

  // List of item indices currently being processed by consumers.
  repeated fixed64 currently_dispatched_items = 4;
}

// QueueItem represents a single item stored in the persistent queue.
message QueueItem {
  // Size of the item according to the sizer that was active when enqueued
  int64 item_size = 1; 
  // The marshaled data of the item.
  bytes item_data = 2;
}
